name: Starfleet HR Complaint

on:
  schedule:
    - cron: '25 */4 * * *'     # Every 4 hours
  workflow_dispatch:

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Tweepy
        run: pip install tweepy

      - name: Create & Run Script
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
        run: |
          cat > post_complaint.py << 'PY'
import tweepy
import random

# === SECRETS INJECTED DIRECTLY ===
CONSUMER_KEY = """$CONSUMER_KEY"""
CONSUMER_SECRET = """$CONSUMER_SECRET"""
ACCESS_TOKEN = """$ACCESS_TOKEN"""
ACCESS_TOKEN_SECRET = """$ACCESS_TOKEN_SECRET"""

# === Validate ===
if not all([CONSUMER_KEY.strip(), CONSUMER_SECRET.strip(), ACCESS_TOKEN.strip(), ACCESS_TOKEN_SECRET.strip()]):
    print("ERROR: One or more secrets missing")
    exit(1)

print("All secrets loaded")

# === OAuth 1.0a ===
auth = tweepy.OAuth1UserHandler(
    CONSUMER_KEY.strip(),
    CONSUMER_SECRET.strip(),
    ACCESS_TOKEN.strip(),
    ACCESS_TOKEN_SECRET.strip()
)
api = tweepy.API(auth)

try:
    user = api.verify_credentials()
    print(f"Authenticated as @{user.screen_name}")
except Exception as e:
    print(f"Auth failed: {e}")
    exit(1)

# === Complaints ===
complaints = [
    "Anonymous: The replicator gave me decaf AGAIN.",
    "Anonymous: Phaser on 'stun' feels like a hug.",
    "Anonymous: Holodeck vacation â†’ Borg cube.",
    "Anonymous: Turbolift stopped on 47 decks.",
    "Anonymous: Counselor says I need therapy.",
    "Anonymous: Door squeaks. Engineering: 'It's ambiance.'",
    "Anonymous: Replicated coffee tastes like warp coolant.",
    "Anonymous: Badge fell off during red alert.",
    "Anonymous: Captain's log: 99% dramatic pauses.",
    "Anonymous: Hypospray hurts more than the injury."
]

# === POST NOW ===
msg = random.choice(complaints)
try:
    api.update_status(msg)
    print(f"POSTED: {msg}")
except Exception as e:
    print(f"Post failed: {e}")
PY

          # === Run ===
          python post_complaint.py
