name: Starfleet HR Complaint Poster

on:
  schedule:
    - cron: '20 */12 * * *'  # Every 12 hours
  workflow_dispatch:     # Allow manual run

jobs:
  post-complaint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Tweepy
        run: pip install tweepy

      - name: Post Starfleet HR Complaint
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
        run: |
          python - <<EOF
          import tweepy
          import random
          from datetime import datetime, timedelta, timezone
          import os

          # === OAuth 1.0a Setup ===
          auth = tweepy.OAuth1UserHandler(
              os.environ['CONSUMER_KEY'],
              os.environ['CONSUMER_SECRET'],
              os.environ['ACCESS_TOKEN'],
              os.environ['ACCESS_TOKEN_SECRET']
          )
          api = tweepy.API(auth)

          # === Funny Starfleet HR Complaints ===
          complaints = [
              "Anonymous: The replicator gave me decaf AGAIN.",
              "Anonymous: My phaser is set to 'stun' but it feels more like 'mild annoyance'.",
              "Anonymous: The holodeck keeps glitching and turning my vacation into a Klingon opera.",
              "Anonymous: Why does the turbolift always stop at every deck when I'm in a hurry?",
              "Anonymous: The ship's counselor is too empathetic; now I feel bad for complaining.",
              "Anonymous: Engineering won't fix the squeaky door in my quarters—claims it's 'ambient noise'.",
              "Anonymous: The food synthesizer only produces bland rations; where's the flavor variety?",
              "Anonymous: My communicator badge fell off during a red alert—embarrassing!",
              "Anonymous: The captain's logs are too dramatic; can we tone down the narration?",
              "Anonymous: Sickbay's hyposprays sting more than a Tribble bite.",
              "Anonymous: The viewscreen resolution is fuzzy; can't see enemy ships clearly.",
              "Anonymous: Shuttlecraft parking is a nightmare; always full during shift changes.",
              "Anonymous: The universal translator mangled my pickup line at the bar.",
              "Anonymous: Gravity plating failed in the gym; now I'm 'floating' through workouts.",
              "Anonymous: The ship's AI keeps suggesting I 'relax'—as if!",
              "Anonymous: Replicated uniforms shrink in the sonic shower.",
              "Anonymous: Borg assimilation threats in spam emails—IT, please filter better.",
              "Anonymous: The jefferies tubes are too cramped for routine maintenance.",
              "Anonymous: Ten Forward's happy hour doesn't have enough synthehol options.",
              "Anonymous: My PADD autocorrects 'phaser' to 'fazer'—unprofessional!"
          ]

          # === Check last tweet time (to enforce 17-hour gap) ===
          def should_post():
              try:
                  tweets = api.user_timeline(count=1, tweet_mode='extended')
                  if not tweets:
                      return True
                  latest = tweets[0].created_at.replace(tzinfo=timezone.utc)
                  now = datetime.now(timezone.utc)
                  return (now - latest) > timedelta(hours=17)
              except Exception as e:
                  print(f"Error checking timeline: {e}")
                  return False

          # === Post if due ===
          if should_post():
              complaint = random.choice(complaints)
              try:
                  api.update_status(complaint)
                  print(f"Posted: {complaint}")
              except Exception as e:
                  print(f"Failed to post: {e}")
          else:
              print("Last post was < 12 hours ago. Skipping.")
          EOF
