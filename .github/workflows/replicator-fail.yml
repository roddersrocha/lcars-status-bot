name: Replicator Malfunction of the Day

on:
  schedule:
    - cron: '0 */4 * * *'   # Every 4 hours: 00:00, 04:00, 08:00, 12:00, 16:00, 20:00 UTC
  workflow_dispatch:       # Manual trigger

jobs:
  replicator-fail:
    runs-on: ubuntu-latest
    steps:
      # -------------------------------------------------
      # 1. Generate Replicator Malfunction
      # -------------------------------------------------
      - name: Generate Malfunction
        run: |
          # What the crew *asked* for
          REQUESTS=(
            "Tea, Earl Grey, hot"
            "Coffee, black"
            "Raktajino, extra sweet"
            "Synthehol, Aldebaran whiskey"
            "Hasperat, extra spicy"
            "Plomeek soup"
            "Jumbo Romulan mollusk"
            "Gagh, extra wiggly"
            "Root beer, chilled"
            "Kanar, aged"
            "Yamok sauce"
            "Slug-o-Cola"
            "Bloodwine, warm"
            "Chocolate sundae, Vulcan style"
          )

          # What the replicator *gave* them
          OUTPUTS=(
            "live gagh"
            "sentient tribble"
            "Klingon bloodwine (real)"
            "Ferengi snail juice"
            "Borg nanoprobe soup"
            "Vulcan IDIC symbol (edible)"
            "Q in a teacup"
            "a tiny model of the Enterprise"
            "Data’s cat, Spot"
            "a singing hologram of Vic Fontaine"
            "a Romulan warbird (miniature)"
            "a tribble wearing a Starfleet uniform"
            "Neelix’s ‘Even Better Than Coffee’ substitute"
            "a bowl of self-replicating spaghetti"
            "a phaser set to ‘puree’"
            "the number 47"
            "a red shirt"
          )

          REQUEST=$(shuf -e "${REQUESTS[@]}" -n1)
          OUTPUT=$(shuf -e "${OUTPUTS[@]}" -n1)

          TEXT="Replicator Log: Requested \"$REQUEST\" → Dispensed: $OUTPUT. Crew advised not to consume. Again."
          
          echo "Generated: $TEXT"
          echo "TWEET_TEXT<<EOF" >> $GITHUB_ENV
          echo "$TEXT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # -------------------------------------------------
      # 2. Post to X/Twitter via OAuth 1.0a
      # -------------------------------------------------
      - name: Post Malfunction Report
        env:
          API_KEY: ${{ secrets.TWITTER_API_KEY }}
          API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        run: |
          # URL-encode credentials
          CONSUMER_KEY=$(printf %s "$API_KEY" | jq -sRr @uri)
          CONSUMER_SECRET=$(printf %s "$API_SECRET" | jq -sRr @uri)
          TOKEN=$(printf %s "$ACCESS_TOKEN" | jq -sRr @uri)
          TOKEN_SECRET=$(printf %s "$ACCESS_TOKEN_SECRET" | jq -sRr @uri)

          # OAuth 1.0a signature
          NONCE=$(openssl rand -hex 16)
          TIMESTAMP=$(date +%s)
          SIG_BASE="POST&https%3A%2F%2Fapi.twitter.com%2F2%2Ftweets&oauth_consumer_key%3D$CONSUMER_KEY%26oauth_nonce%3D$NONCE%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D$TIMESTAMP%26oauth_token%3D$TOKEN%26oauth_version%3D1.0"
          SIG_KEY="$CONSUMER_SECRET&$TOKEN_SECRET"
          SIGNATURE=$(echo -n "$SIG_BASE" | openssl dgst -sha1 -hmac "$SIG_KEY" -binary | openssl base64 | jq -sRr @uri)

          AUTH_HEADER="OAuth oauth_consumer_key=\"$CONSUMER_KEY\", oauth_nonce=\"$NONCE\", oauth_signature=\"$SIGNATURE\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"$TIMESTAMP\", oauth_token=\"$TOKEN\", oauth_version=\"1.0\""

          # Post tweet
          RESPONSE=$(curl -s -X POST "https://api.twitter.com/2/tweets" \
            -H "Authorization: $AUTH_HEADER" \
            -H "Content-Type: application/json" \
            -d "{\"text\": \"$TWEET_TEXT\"}")

          echo "API Response: $RESPONSE"
          if echo "$RESPONSE" | grep -q '"id"'; then
            ID=$(echo "$RESPONSE" | jq -r '.data.id')
            echo "Malfunction reported! https://x.com/i/status/$ID"
          else
            echo "Failed to post."
            echo "$RESPONSE"
            exit 1
          fi
