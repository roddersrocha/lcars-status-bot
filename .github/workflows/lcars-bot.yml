name: LCARS Status Bot

on:
  schedule:
    - cron: '15 */2 * * *'  # Every 2 hours at :15
  workflow_dispatch:

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
      - name: Build LCARS Tweet
        run: |
          SHIPS=(
            "USS Enterprise NCC-1701-D"
            "USS Voyager NCC-74656"
            "USS Defiant NX-74205"
            "USS Discovery NCC-1031"
            "USS Cerritos NCC-75567"
            "USS Protostar NX-76884"
            "USS Excelsior NCC-2000"
            "USS Reliant NCC-1864"
            "USS Stargazer NCC-2893"
            "USS Titan NCC-80102"
          )

          TEMPLATES=(
            "LCARS SYSTEM LOG [{ts}] — {ship} sensor grid recalibration complete. Quantum flux deviation within 0.0003%. Deep-space telemetry nominal."
            "LCARS ALERT [{ts}] — {ship} detects subspace anomaly at bearing 234.7 mark 12. Signature unmatched."
            "LCARS STATUS [{ts}] — {ship} warp core efficiency 99.7%. Antimatter containment stable. Life support optimal."
            "LCARS DIAGNOSTIC [{ts}] — {ship} holodeck matrix drift corrected. Photonic resonance restored."
            "LCARS LOG [{ts}] — {ship} long-range probe 47-B reports intermittent tachyon echoes. Source unknown."
            "LCARS REPORT [{ts}] — {ship} shield harmonics re-modulated. Defensive grid integrity 100%."
            "LCARS UPDATE [{ts}] — {ship} stellar cartography update in progress. 12 new Class-M signatures added."
            "LCARS NOTICE [{ts}] — {ship} transporter buffer integrity verified. Pattern degradation 0.000%."
            "LCARS SCAN [{ts}] — {ship} passive sweep detects encrypted burst. Origin: Sector 001."
            "LCARS CORE [{ts}] — {ship} main computer core temperature 21.3°C. Redundancy online."
          )

          SHIP=$(shuf -e "${SHIPS[@]}" -n1)
          TEMPLATE=$(shuf -e "${TEMPLATES[@]}" -n1)
          TS=$(date -u +"%Y-%m-%d %H:%M:%S")UTC

          TEXT="${TEMPLATE//\{ship\}/$SHIP}"
          TEXT="${TEXT//\{ts\}/$TS}"

          echo "TWEET_TEXT<<EOF" >> $GITHUB_ENV
          echo "$TEXT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Tweet (OAuth 1.0a)
        env:
          API_KEY: ${{ secrets.TWITTER_API_KEY }}
          API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        run: |
          # Encode credentials
          CONSUMER_KEY=$(printf %s "$API_KEY" | jq -sRr @uri)
          CONSUMER_SECRET=$(printf %s "$API_SECRET" | jq -sRr @uri)
          TOKEN=$(printf %s "$ACCESS_TOKEN" | jq -sRr @uri)
          TOKEN_SECRET=$(printf %s "$ACCESS_TOKEN_SECRET" | jq -sRr @uri)

          # Generate OAuth signature
          NONCE=$(openssl rand -hex 16)
          TIMESTAMP=$(date +%s)

          SIG_BASE="POST&https%3A%2F%2Fapi.twitter.com%2F2%2Ftweets&oauth_consumer_key%3D$CONSUMER_KEY%26oauth_nonce%3D$NONCE%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D$TIMESTAMP%26oauth_token%3D$TOKEN%26oauth_version%3D1.0"
          SIG_KEY="$CONSUMER_SECRET&$TOKEN_SECRET"
          SIGNATURE=$(echo -n "$SIG_BASE" | openssl dgst -sha1 -hmac "$SIG_KEY" -binary | openssl base64 | jq -sRr @uri)

          # Build header
          AUTH_HEADER="OAuth oauth_consumer_key=\"$CONSUMER_KEY\", oauth_nonce=\"$NONCE\", oauth_signature=\"$SIGNATURE\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"$TIMESTAMP\", oauth_token=\"$TOKEN\", oauth_version=\"1.0\""

          # Send tweet
          RESPONSE=$(curl -s -X POST "https://api.twitter.com/2/tweets" \
            -H "Authorization: $AUTH_HEADER" \
            -H "Content-Type: application/json" \
            -d "{\"text\": \"$TWEET_TEXT\"}")

          echo "Response: $RESPONSE"
          if echo "$RESPONSE" | grep -q '"id"'; then
            ID=$(echo "$RESPONSE" | jq -r '.data.id')
            echo "LCARS transmitted! https://x.com/i/status/$ID"
          else
            echo "Failed to post tweet."
            echo "$RESPONSE"
            exit 1
          fi
